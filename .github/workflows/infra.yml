name: Infrastructure

on:
  pull_request:
    paths:
      - 'infra/terraform/**'
      - '.github/workflows/infra.yml'
  push:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
      - '.github/workflows/infra.yml'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  id-token: write

env:
  TF_VERSION: '1.5'
  TFLINT_VERSION: 'v0.50.3'
  TFSEC_VERSION: 'v1.28.5'

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

  lint:
    name: Lint with tflint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint --format compact

  security:
    name: Security Scan with tfsec
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./infra/terraform
          soft_fail: false
          format: default

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [validate, lint, security]
    # Only run if secrets are configured AND it's a PR
    # To enable: Add GCP_PROJECT_ID and DEV_JWT_SECRET to GitHub repo secrets
    if: github.event_name == 'pull_request' && vars.TERRAFORM_ENABLED == 'true'
    defaults:
      run:
        working-directory: ./infra/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan
        continue-on-error: true
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_dev_jwt_secret: ${{ secrets.DEV_JWT_SECRET }}

      - name: Comment PR with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.plan.outcome }}\`
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${{ steps.plan.outputs.stdout }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  apply:
    name: Terraform Apply (Manual)
    runs-on: ubuntu-latest
    needs: [validate, lint, security]
    # Only run if secrets are configured AND pushing to main
    # To enable: Add GCP_PROJECT_ID and DEV_JWT_SECRET to GitHub repo secrets
    # AND set TERRAFORM_ENABLED variable to 'true'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && vars.TERRAFORM_ENABLED == 'true'
    environment: production
    defaults:
      run:
        working-directory: ./infra/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_dev_jwt_secret: ${{ secrets.DEV_JWT_SECRET }}

      - name: Manual Approval Required
        run: |
          echo "::notice ::Terraform plan complete. Manual approval required for apply."
          echo "Review the plan above and run 'terraform apply' manually."
          exit 0
